{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectUser","className","map","todo","classNames","completed","title","type","onClick","userId","id","TodoFilter","changeFilteredBy","changeQuery","query","onChange","event","target","value","handleChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedUser","useState","user","setUser","useEffect","loadUser","a","userFromServer","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","isLoading","setLoading","setUserId","selectedTodo","setSelectedTodo","filteredBy","setFilteredBy","setQuery","loadTodos","todosFromServer","handleQueryFiltering","toLowerCase","includes","filter","todoId","usersTodo","find","filterType","input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c58721ce.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectUser }) => (\n  <table\n    data-cy=\"listOfTodos\"\n    className=\"table is-narrow is-fullwidth\"\n  >\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          className={classNames(\n            todo.completed\n              ? 'has-text-success has-background-success-light'\n              : 'has-text-danger has-background-danger-light',\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            <span className=\"icon is-size-5\">\n              <i className={classNames('fas',\n                todo.completed\n                  ? 'fa-check-square'\n                  : 'fa-ban')}\n              />\n            </span>\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            {todo.title}\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              className=\"button is-warning\"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId, todo.id);\n              }}\n            >\n              {`Show ${todo.userId}`}\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  changeFilteredBy: (filterType: string) => void,\n  changeQuery: (input: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeFilteredBy,\n  changeQuery,\n  query,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeFilteredBy(event.target.value);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => handleChange(event)}\n          >\n            <option\n              value={Filter.ALL}\n            >\n              All\n            </option>\n\n            <option\n              value={Filter.ACTIVE}\n            >\n              Active\n            </option>\n\n            <option\n              value={Filter.COMPLETED}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"filterByTitle\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete has-text\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  return wait(1000)\n    .then(() => fetch(BASE_URL + url))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (id: number | null) => {\n  return get<User>(`/users/${id}`);\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo?: Todo,\n  selectedUser: number | null,\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedUser,\n  selectUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const userFromServer = await getUser(selectedUser);\n\n      setUser(userFromServer);\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div className=\"modal-card-title has-text-weight-medium\">\n                {`Todo #${todo?.id}`}\n              </div>\n\n              <a\n                href=\"#close\"\n                className=\"delete\"\n                onClick={() => selectUser(0, 0)}\n              >\n                Close\n              </a>\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\">{todo?.title}</p>\n\n              <p className=\"block\">\n                {\n                  todo?.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n                {' by '}\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [isLoading, setLoading] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todosFromServer = await getTodos();\n\n      setLoading(true);\n      setTodos(todosFromServer);\n      setVisibleTodos(todosFromServer);\n    };\n\n    loadTodos();\n    setLoading(false);\n  }, []);\n\n  const changeFilteredBy = (filterType: string) => {\n    setFilteredBy(filterType);\n  };\n\n  const changeQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleQueryFiltering = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (filteredBy) {\n      case Filter.ALL:\n        setVisibleTodos(todos.filter(todo => handleQueryFiltering(todo.title)));\n        break;\n\n      case Filter.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed && handleQueryFiltering(todo.title)));\n        break;\n\n      case Filter.COMPLETED:\n        setVisibleTodos(todos.filter(todo => todo.completed && handleQueryFiltering(todo.title)));\n        break;\n\n      default:\n        break;\n    }\n  }, [filteredBy, query]);\n\n  const selectUser = (id: number, todoId: number) => {\n    setUserId(id);\n    setSelectedTodo(todoId);\n  };\n\n  const usersTodo = todos.find(todo => todo.id === selectedTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">{`Todos: ${filteredBy}`}</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeFilteredBy={changeFilteredBy}\n                changeQuery={changeQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectUser={selectUser}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!userId && (\n        <TodoModal\n          todo={usersTodo}\n          selectedUser={userId}\n          selectUser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './general.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}